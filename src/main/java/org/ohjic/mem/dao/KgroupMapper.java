package org.ohjic.mem.dao;

import java.util.List;

import org.ohjic.mem.model.Kgroup;
import org.ohjic.mem.model.KgroupKey;
import org.ohjic.mem.vo.DepthVo;
import org.ohjic.mem.vo.YearVo;

public interface KgroupMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kGroup
     *
     * @mbg.generated Wed Dec 21 14:44:49 KST 2016
     */
    int deleteByPrimaryKey(KgroupKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kGroup
     *
     * @mbg.generated Wed Dec 21 14:44:49 KST 2016
     */
    int insert(Kgroup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kGroup
     *
     * @mbg.generated Wed Dec 21 14:44:49 KST 2016
     */
    int insertSelective(Kgroup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kGroup
     *
     * @mbg.generated Wed Dec 21 14:44:49 KST 2016
     */
    Kgroup selectByPrimaryKey(KgroupKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kGroup
     *
     * @mbg.generated Wed Dec 21 14:44:49 KST 2016
     */
    int updateByPrimaryKeySelective(Kgroup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kGroup
     *
     * @mbg.generated Wed Dec 21 14:44:49 KST 2016
     */
    int updateByPrimaryKeyWithBLOBs(Kgroup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kGroup
     *
     * @mbg.generated Wed Dec 21 14:44:49 KST 2016
     */
    int updateByPrimaryKey(Kgroup record);

    /**
     * 해당하는 연도의 kGroup 목록 조회
     * @param group
     * @return
     */
	List<Kgroup> selectKgroupByYear(Kgroup group);

	/**
	 * 기준연도를 기준연도+1에 그대로 복사한다.
	 * @param group
	 * @return
	 */
	int insertNextYearKgroupByYear(YearVo yearVo);

	/**
	 * depth 재설정
	 * @param yearVo
	 * @return
	 */
	int updateNextYearKgroupDepthByYear(DepthVo depthVo);

	int deleteNextYearKgroup(YearVo yearVo);
}